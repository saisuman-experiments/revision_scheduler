{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\machi\\\\Documents\\\\React\\\\test\\\\Revision\\\\my-app\\\\src\\\\components\\\\Main\\\\Main.js\",\n  _s = $RefreshSig$();\nimport { data } from \"../Data/Data\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Main() {\n  _s();\n  const [tpc, setTpc] = useState();\n  const [selectedDateTo, setselectedDateTo] = useState(\"\");\n  const [selectedDateFrom, setselectedDateFrom] = useState(\"\");\n  const [frequencyList, setFL] = useState([]);\n  const [firstRev, setFirstRev] = useState();\n  const [secondRev, setSecondRev] = useState();\n  // let frequencyList=[];\n\n  useEffect(() => {\n    data.map(d => {\n      let fd = new Date(d.startDate); // Create a copy of the input date to avoid modifying the original\n      fd.setDate(fd.getDate() + 7 * d.firstRevision);\n      let sd = new Date(d.startDate); // Create a copy of the input date to avoid modifying the original\n      sd.setDate(sd.getDate() + 7 * d.secondRevision);\n      // Add 14 days to the date\n      //   return result;\n      //  let fd=new Date(d.startDate).getDate()+7*d.firstRevision;\n      //  let sd=new Date(d.startDate).getDate()+7*d.secondRevision;\n      d.fd = fd;\n      d.sd = sd;\n    });\n    // console.log(data);\n  }, []);\n  function handleTpc(e) {\n    setTpc(e.target.value);\n  }\n\n  // function handleDateChange(to,from){\n  //   //  setselectedDate(e.target.value);\n  //   if(to!==undefined){\n\n  //   }\n  //   console.log(to);\n  //   console.log(from);\n  // }\n  //frequencyList=data;\n\n  function showTpc() {\n    if (selectedDateTo !== \"\" && selectedDateFrom !== \"\") {\n      let a = [];\n      let b = [];\n      a = data.filter(d => {\n        let fd = new Date(d.fd);\n        fd.setDate(fd.getDate() + 7);\n        return new Date(d.fd) >= new Date(selectedDateTo) && new Date(selectedDateFrom) >= new Date(d.fd);\n      });\n      b = data.filter(d => {\n        let sd = new Date(d.sd);\n        sd.setDate(sd.getDate() + 7);\n        return new Date(d.sd) >= new Date(selectedDateTo) && new Date(selectedDateFrom) >= new Date(d.sd);\n      });\n      setFL([...a, ...b]);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is main page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDateTo,\n      onChange: e => {\n        setselectedDateTo(e.target.value);\n        setselectedDateFrom(\"\");\n        // handleDateChange(e.target.value,selectedDateFrom)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      value: selectedDateFrom,\n      min: selectedDateTo,\n      onChange: e => {\n        setselectedDateFrom(e.target.value);\n        //handleDateChange(selectedDateTo,e.target.value)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showTpc,\n      children: \"Show Topics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), frequencyList.length > 0 && frequencyList.map(f => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"li\", {\n        children: f.tpc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)), !frequencyList.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"No Topics founf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }, this)]\n  }, void 0, true);\n}\n_s(Main, \"5J1+UL6hC/4w8hcUJyQuMtZOiQQ=\");\n_c = Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["data","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Main","_s","tpc","setTpc","selectedDateTo","setselectedDateTo","selectedDateFrom","setselectedDateFrom","frequencyList","setFL","firstRev","setFirstRev","secondRev","setSecondRev","map","d","fd","Date","startDate","setDate","getDate","firstRevision","sd","secondRevision","handleTpc","e","target","value","showTpc","a","b","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","min","onClick","length","f","_c","$RefreshReg$"],"sources":["C:/Users/machi/Documents/React/test/Revision/my-app/src/components/Main/Main.js"],"sourcesContent":["import { data } from \"../Data/Data\"\r\nimport {useState ,useEffect} from \"react\";\r\n\r\nexport default function Main(){\r\n    const [tpc,setTpc]=useState();\r\n    const [selectedDateTo,setselectedDateTo]=useState(\"\");\r\n    const [selectedDateFrom,setselectedDateFrom]=useState(\"\");\r\n    const [frequencyList,setFL]=useState([])\r\n    const [firstRev,setFirstRev]=useState();\r\n    const [secondRev,setSecondRev]=useState();\r\n   // let frequencyList=[];\r\n    \r\n     useEffect(()=>{\r\n        data.map((d)=>{\r\n            let fd = new Date(d.startDate);  // Create a copy of the input date to avoid modifying the original\r\n  fd.setDate(fd.getDate() + 7*d.firstRevision); \r\n  let sd = new Date(d.startDate);  // Create a copy of the input date to avoid modifying the original\r\n  sd.setDate(sd.getDate() + 7*d.secondRevision);\r\n  // Add 14 days to the date\r\n//   return result;\r\n//  let fd=new Date(d.startDate).getDate()+7*d.firstRevision;\r\n//  let sd=new Date(d.startDate).getDate()+7*d.secondRevision;\r\n  d.fd=fd;\r\n  d.sd=sd;\r\n        });\r\n       // console.log(data);\r\n\r\n     },[]);\r\n    function handleTpc(e){\r\n        setTpc(e.target.value);\r\n    }\r\n\r\n    // function handleDateChange(to,from){\r\n    //   //  setselectedDate(e.target.value);\r\n    //   if(to!==undefined){\r\n\r\n    //   }\r\n    //   console.log(to);\r\n    //   console.log(from);\r\n    // }\r\n//frequencyList=data;\r\n \r\n\r\n \r\n\r\n    \r\n    function showTpc(){\r\n        if(selectedDateTo!==\"\" && selectedDateFrom!==\"\"){\r\n       let a=[];\r\n       let b=[];\r\n             a=data.filter((d)=>{\r\n                let fd = new Date(d.fd); \r\n                fd.setDate(fd.getDate() + 7); \r\n                return new Date(d.fd)>=new Date (selectedDateTo) && new Date (selectedDateFrom)>=new Date(d.fd);\r\n               \r\n            });\r\n            \r\n             b=data.filter((d)=>{\r\n                let sd = new Date(d.sd); \r\n                sd.setDate(sd.getDate() + 7); \r\n                return new Date(d.sd)>=new Date (selectedDateTo) && new Date (selectedDateFrom)>=new Date(d.sd);\r\n               \r\n            });\r\n            \r\n            setFL([...a,...b]);\r\n           \r\n                }\r\n    }\r\n\r\n\r\n    return(<>\r\n    <h1>This is main page</h1>\r\n    {/* <label>Enter Topic:</label><br></br>\r\n    <input value={tpc} onChange={handleTpc}></input>\r\n    <br></br>\r\n    <div>\r\n    <label>Enter Date:</label><br></br>\r\n    <input \r\n        type=\"date\" \r\n        value={selectedDate}\r\n        onChange={handleDateChange} \r\n      />\r\n    </div>\r\n    \r\n      <div>\r\n      <label>First Revision</label><br></br>\r\n      <input value={firstRev} onChange={(e)=>{setFirstRev(e.target.value)}}></input>\r\n      </div>\r\n      \r\n      <div>\r\n      <label>Second Revision</label><br></br>\r\n      <input value={secondRev} onChange={(e)=>{setSecondRev(e.target.value)}}></input>\r\n      </div>\r\n\r\n      <button onClick={handleSave}>Save</button> */}\r\n\r\n      <input \r\n        type=\"date\" \r\n        value={selectedDateTo}\r\n        onChange={(e)=>{\r\n            setselectedDateTo(e.target.value);\r\n            setselectedDateFrom(\"\");\r\n           // handleDateChange(e.target.value,selectedDateFrom)\r\n           }} \r\n      />\r\n      \r\n      <input \r\n        type=\"date\" \r\n        value={selectedDateFrom}\r\n        min={selectedDateTo}\r\n        onChange={(e)=>{\r\n            setselectedDateFrom(e.target.value);\r\n            //handleDateChange(selectedDateTo,e.target.value)\r\n        }} \r\n      />\r\n\r\n      <button onClick={showTpc}>Show Topics</button>\r\n      {frequencyList.length>0 && frequencyList.map((f)=>\r\n    <>\r\n    <li>{f.tpc}</li>\r\n    </>\r\n\r\n    )}\r\n\r\n    {!frequencyList.length>0 && <span>No Topics founf</span>}\r\n\r\n    \r\n    </>)\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}